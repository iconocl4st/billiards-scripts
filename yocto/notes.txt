export YOCTO_DIR=/work/pool/repos/billiards-scripts/yocto

cd $YOCTO_DIR
. sources/poky/oe-init-build-env
bitbake qt5-image
bitbake billiards-image
bitbake billiards-image -c populate_sdk
cd ../output/tmp_dir/deploy/sdk/



cd sources/meta-rpi/scripts/

sudo mkdir ../../../mount
sudo umount /dev/sdc1
sudo umount /dev/sdc2

cd sources/meta-rpi/scripts/
sudo ./mk2parts.sh sdc

sudo mkdir -p /media/card

cd $YOCTO_DIR/sources/meta-rpi/scripts/


# bootfs
sudo umount /dev/sdc1
sudo umount /dev/sdc2
export OETMP=$YOCTO_DIR/output/tmp_dir
export MACHINE=raspberrypi3
sudo MACHINE=raspberrypi3 OETMP=$YOCTO_DIR/output/tmp_dir ./copy_boot.sh sdc

# bootfs 4
# sudo -i
umount /dev/sdc1
umount /dev/sdc2
export OETMP=$YOCTO_DIR/output/pi4/tmp_dir/
export MACHINE=raspberrypi4
MACHINE=raspberrypi4 OETMP=$YOCTO_DIR/output/pi4/tmp_dir/ ./copy_boot.sh sdc



# rootfs
sudo umount /dev/sdc1
sudo umount /dev/sdc2
export OETMP=$YOCTO_DIR/output/tmp_dir
export MACHINE=raspberrypi3
sudo MACHINE=raspberrypi3 OETMP=$YOCTO_DIR/output/tmp_dir ./copy_rootfs.sh sdc billiards

# rootfs 4
umount /dev/sdc1
umount /dev/sdc2
export OETMP=$YOCTO_DIR/output/pi4/tmp_dir/
export MACHINE=raspberrypi4
sudo MACHINE=raspberrypi4 OETMP=$YOCTO_DIR/output/pi4/tmp_dir/ ./copy_rootfs.sh sdc billiards


iptables -A INPUT -p tcp --dport 18080 -j ACCEPT
iptables -A INPUT -p tcp --dport 18081 -j ACCEPT
iptables -A INPUT -p tcp --dport 18082 -j ACCEPT
iptables -A INPUT -p tcp --dport 18083 -j ACCEPT
iptables -A INPUT -p tcp --dport 18084 -j ACCEPT
iptables -A INPUT -p tcp --dport 18085 -j ACCEPT
iptables -A INPUT -p tcp --dport 18086 -j ACCEPT


iptables -A INPUT -p tcp --dport 80 -j ACCEPT


export REPOS=/work/pool/repos
pushd $REPOS/billiards-client
npm run build
popd

scp -r $REPOS/billiards-client/build/* root@10.0.0.141:/var/www/monkey

vi /etc/monkey/monkey.conf
systemctl restart monkey.service




mkdir tmp
pushd tmp
cp $(realpath $REPOS/billiards-scripts/yocto/output/tmp_dir/deploy/images/raspberrypi3/billiards-image-raspberrypi3.tar.xz
) .

cp /work/pool/repos/billiards-scripts/yocto/output/pi4/tmp_dir/deploy/images/raspberrypi4/billiards-image-raspberrypi4.tar.xz .

tar xf billiards-*
scp ./app/qt-projection-api root@10.0.0.160:/app/qt-projection-api
popd
rm -rf tmp



NOT USED:

cp $YOCTO_DIR/conf/bblayers.conf $YOCTO_DIR/build/conf/
cp $YOCTO_DIR/conf/local.conf $YOCTO_DIR/build/conf/

reverse:
cp $YOCTO_DIR/build/conf/bblayers.conf $YOCTO_DIR/conf/
cp $YOCTO_DIR/build/conf/local.conf $YOCTO_DIR/conf/


follow:
https://wiki.archlinux.org/title/systemd-networkd




To get graphics to work:
QT_QPA_EGLFS_ALWAYS_SET_MODE="1"


